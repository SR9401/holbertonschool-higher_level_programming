>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

# ✅ Cas valides
>>> bg.integer_validator("age", 1)
>>> bg.integer_validator("width", 9999)
>>> bg.integer_validator("length", 42)

# ❌ Cas : valeur == 0 (doit lever ValueError)
>>> bg.integer_validator("size", 0)
Traceback (most recent call last):
...
ValueError: size must be greater than 0

# ❌ Cas : valeur négative
>>> bg.integer_validator("age", -5)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

# ❌ Cas : chaîne de caractères
>>> bg.integer_validator("height", "10")
Traceback (most recent call last):
...
TypeError: height must be an integer

# ❌ Cas : float
>>> bg.integer_validator("thickness", 3.14)
Traceback (most recent call last):
...
TypeError: thickness must be an integer

# ❌ Cas : booléen (bool hérite de int, mais ce n’est pas accepté ici)
>>> bg.integer_validator("active", True)
Traceback (most recent call last):
...
TypeError: active must be an integer

# ❌ Cas : liste
>>> bg.integer_validator("items", [1, 2, 3])
Traceback (most recent call last):
...
TypeError: items must be an integer

# ❌ Cas : dictionnaire
>>> bg.integer_validator("config", {"key": "value"})
Traceback (most recent call last):
...
TypeError: config must be an integer

# ❌ Cas : None
>>> bg.integer_validator("data", None)
Traceback (most recent call last):
...
TypeError: data must be an integer
